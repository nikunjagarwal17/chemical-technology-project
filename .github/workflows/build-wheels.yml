name: Build Pure Python Wheels

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build pure Python wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel build
          python -m pip install numpy matplotlib

      - name: Build pure Python wheel
        run: |
          echo "Building PyroXa v1.0.0 (Pure Python - No Compilation Required)"
          python -m build --wheel --outdir dist
        
      - name: Show dist contents
        run: |
          echo "Contents of dist:"
          ls -la dist

      - name: Test installation
        run: |
          pip install dist/*.whl
          python -c "
          import pyroxa
          print(f'âœ… PyroXa {pyroxa.get_version()} loaded successfully')
          print(f'ðŸ“¦ Available functions: {len([x for x in dir(pyroxa) if not x.startswith(\"_\")])}')
          
          # Quick functionality test
          result1 = pyroxa.arrhenius_rate(1e6, 50000, 298)
          result2 = pyroxa.linear_interpolate(2.5, [1,2,3,4], [2,4,6,8])
          print(f'âœ… arrhenius_rate: {result1:.3e}')
          print(f'âœ… linear_interpolate: {result2}')
          print('ðŸŽ‰ PyroXa pure Python wheel working perfectly!')
          "

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: pyroxa-pure-python-wheel
          path: dist/*.whl

  test-wheel:
    name: Test wheel on multiple platforms
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: pyroxa-pure-python-wheel
          path: ./dist
      
      - name: Install dependencies and test wheel
        shell: bash
        run: |
          pip install numpy matplotlib
          echo "Contents of dist directory:"
          ls -la dist/
          wheel_file=$(find dist -name "*.whl" | head -1)
          echo "Installing wheel: $wheel_file"
          pip install "$wheel_file"
          python -c "
          import pyroxa
          print('âœ… PyroXa loaded on ${{ matrix.os }} Python ${{ matrix.python-version }}')
          
          # Test core functionality
          assert hasattr(pyroxa, 'arrhenius_rate'), 'arrhenius_rate function missing'
          assert hasattr(pyroxa, 'ChainReactorVisualizer'), 'ChainReactorVisualizer class missing'
          assert hasattr(pyroxa, 'run_simulation'), 'run_simulation function missing'
          
          # Test actual function call
          result = pyroxa.arrhenius_rate(1e6, 50000, 298)
          assert 0.001 < result < 0.01, 'Unexpected arrhenius_rate result: ' + str(result)
          
          # Test another function  
          linear_result = pyroxa.linear_interpolate(2.5, [1,2,3,4], [2,4,6,8])
          assert linear_result == 5.0, 'Unexpected linear_interpolate result: ' + str(linear_result)
          
          func_count = len([x for x in dir(pyroxa) if not x.startswith('_')])
          print('âœ… All ' + str(func_count) + ' functions available')
          print('ðŸŽ‰ All tests passed!')
          "
